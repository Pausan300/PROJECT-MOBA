//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Inputs/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""a0b9385b-0b46-4af4-aff3-ddb90e92d18d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7f90bf8c-eba7-4a56-8d53-4cd9bf9ffdbe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""QSkill"",
                    ""type"": ""Button"",
                    ""id"": ""ae385a1b-6f8b-4f41-b3ae-244437bfb70c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WSkill"",
                    ""type"": ""Button"",
                    ""id"": ""832cba78-76d8-4cbf-a521-3ccc4178231b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESkill"",
                    ""type"": ""Button"",
                    ""id"": ""697f23ad-a638-48af-af77-6d62f1c48192"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RSkill"",
                    ""type"": ""Button"",
                    ""id"": ""c13615bf-fe11-49bb-800e-f46177283a6c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DSummoner"",
                    ""type"": ""Button"",
                    ""id"": ""7cb1f016-7a40-4031-8156-f25114a2b1d0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FSummoner"",
                    ""type"": ""Button"",
                    ""id"": ""bde8e862-1ccb-4390-bce5-03022a3de9f2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""04eee369-f0d7-47bc-834c-315657ed5a21"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""78f9cf5e-dc0d-4f6c-a256-37f047003c97"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0419e1fb-cd4f-4df2-9af7-c566abafd1bf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8d0ebfa5-9b22-4ece-9673-68f5ce015ae0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5729381a-3e6a-4bf0-b127-67b97df9753b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""349880e7-43f2-4a15-afe8-8924e9d2a511"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""99718b57-60f3-433f-b8b2-ceef674c3fd7"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efe3a97f-b1d6-445b-a05f-82023f70b3dc"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""592df57d-ee01-4257-a93d-fecb68b022d8"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1a1bfed-8159-4c31-9291-6ef6f1e76ba1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30998e17-3dab-4654-8a21-bd71c390de60"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DSummoner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb3908f3-1c3e-400d-8081-55e174591a60"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FSummoner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e347715-ed2f-4bae-b92f-8f3125df7efd"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_QSkill = m_Player.FindAction("QSkill", throwIfNotFound: true);
        m_Player_WSkill = m_Player.FindAction("WSkill", throwIfNotFound: true);
        m_Player_ESkill = m_Player.FindAction("ESkill", throwIfNotFound: true);
        m_Player_RSkill = m_Player.FindAction("RSkill", throwIfNotFound: true);
        m_Player_DSummoner = m_Player.FindAction("DSummoner", throwIfNotFound: true);
        m_Player_FSummoner = m_Player.FindAction("FSummoner", throwIfNotFound: true);
        m_Player_Back = m_Player.FindAction("Back", throwIfNotFound: true);
    }

    ~@PlayerInputs()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, PlayerInputs.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_QSkill;
    private readonly InputAction m_Player_WSkill;
    private readonly InputAction m_Player_ESkill;
    private readonly InputAction m_Player_RSkill;
    private readonly InputAction m_Player_DSummoner;
    private readonly InputAction m_Player_FSummoner;
    private readonly InputAction m_Player_Back;
    public struct PlayerActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @QSkill => m_Wrapper.m_Player_QSkill;
        public InputAction @WSkill => m_Wrapper.m_Player_WSkill;
        public InputAction @ESkill => m_Wrapper.m_Player_ESkill;
        public InputAction @RSkill => m_Wrapper.m_Player_RSkill;
        public InputAction @DSummoner => m_Wrapper.m_Player_DSummoner;
        public InputAction @FSummoner => m_Wrapper.m_Player_FSummoner;
        public InputAction @Back => m_Wrapper.m_Player_Back;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @QSkill.started += instance.OnQSkill;
            @QSkill.performed += instance.OnQSkill;
            @QSkill.canceled += instance.OnQSkill;
            @WSkill.started += instance.OnWSkill;
            @WSkill.performed += instance.OnWSkill;
            @WSkill.canceled += instance.OnWSkill;
            @ESkill.started += instance.OnESkill;
            @ESkill.performed += instance.OnESkill;
            @ESkill.canceled += instance.OnESkill;
            @RSkill.started += instance.OnRSkill;
            @RSkill.performed += instance.OnRSkill;
            @RSkill.canceled += instance.OnRSkill;
            @DSummoner.started += instance.OnDSummoner;
            @DSummoner.performed += instance.OnDSummoner;
            @DSummoner.canceled += instance.OnDSummoner;
            @FSummoner.started += instance.OnFSummoner;
            @FSummoner.performed += instance.OnFSummoner;
            @FSummoner.canceled += instance.OnFSummoner;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @QSkill.started -= instance.OnQSkill;
            @QSkill.performed -= instance.OnQSkill;
            @QSkill.canceled -= instance.OnQSkill;
            @WSkill.started -= instance.OnWSkill;
            @WSkill.performed -= instance.OnWSkill;
            @WSkill.canceled -= instance.OnWSkill;
            @ESkill.started -= instance.OnESkill;
            @ESkill.performed -= instance.OnESkill;
            @ESkill.canceled -= instance.OnESkill;
            @RSkill.started -= instance.OnRSkill;
            @RSkill.performed -= instance.OnRSkill;
            @RSkill.canceled -= instance.OnRSkill;
            @DSummoner.started -= instance.OnDSummoner;
            @DSummoner.performed -= instance.OnDSummoner;
            @DSummoner.canceled -= instance.OnDSummoner;
            @FSummoner.started -= instance.OnFSummoner;
            @FSummoner.performed -= instance.OnFSummoner;
            @FSummoner.canceled -= instance.OnFSummoner;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnQSkill(InputAction.CallbackContext context);
        void OnWSkill(InputAction.CallbackContext context);
        void OnESkill(InputAction.CallbackContext context);
        void OnRSkill(InputAction.CallbackContext context);
        void OnDSummoner(InputAction.CallbackContext context);
        void OnFSummoner(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
}
